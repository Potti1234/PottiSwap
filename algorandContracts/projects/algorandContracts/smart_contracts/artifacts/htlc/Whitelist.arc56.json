{
    "name": "Whitelist",
    "structs": {},
    "methods": [
        {
            "name": "createWhitelist",
            "args": [
                {
                    "type": "uint64",
                    "name": "factoryAppId"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "addToWhitelist",
            "args": [
                {
                    "type": "uint64",
                    "name": "appId"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "removeFromWhitelist",
            "args": [
                {
                    "type": "uint64",
                    "name": "appId"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "isWhitelisted",
            "args": [
                {
                    "type": "uint64",
                    "name": "appId"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "factoryAppId": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "ZmFjdG9yeUFwcElk"
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "whitelist": {
                    "keyType": "uint64",
                    "valueType": "uint64",
                    "prefix": "d2hpdGVsaXN0"
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        181
                    ],
                    "errorMessage": "Not authorized to add to whitelist"
                },
                {
                    "pc": [
                        202
                    ],
                    "errorMessage": "Not authorized to remove from whitelist"
                },
                {
                    "pc": [
                        75,
                        107,
                        123,
                        139
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        160
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        78,
                        110,
                        126,
                        142
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        177,
                        198
                    ],
                    "errorMessage": "check GlobalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAQAmAgxmYWN0b3J5QXBwSWQJd2hpdGVsaXN0MRtBAHWCBAQ2Ywo1BHfzoLYEKIgznQT/a+vjNhoAjgQAQgAyACIAAiNDMRkURDEYRDYaAReIAH6AAQAjTwJUgAQVH3x1TFCwIkMxGRREMRhENhoBF4gASiJDMRkURDEYRDYaAReIACUiQzEZFEQxGEQ2GgEXiAANIkMxGUD/qTEYFEQiQ4oBACiL/2eJigEAIyhlRDEYEkSL/xYpTFAiFr+JigEAIyhlRDEYEkSL/xYpTFC8SImKAQGL/xYpTFC9RQGJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}