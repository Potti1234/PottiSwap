{
    "hints": {
        "createEscrow(uint64,byte[32],uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "deployedEscrowAppIds": {
                    "type": "uint64",
                    "key": "deployedEscrowAppIds"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "EscrowFactory",
        "methods": [
            {
                "name": "createEscrow",
                "args": [
                    {
                        "type": "uint64",
                        "name": "timelock",
                        "desc": "The number seconds from the current time after the Escrow can be returned to the creator"
                    },
                    {
                        "type": "byte[32]",
                        "name": "secretHash",
                        "desc": "Hash of the secret in keccak256"
                    },
                    {
                        "type": "uint64",
                        "name": "escrowAppId"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}